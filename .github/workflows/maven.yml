# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: currencyservice-github-action

on:
  push:
    branches: [ demo-shown-ybl ]
  pull_request:
    branches: [ demo-shown-ybl ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '30 4,17 * * *'

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
  GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{env.DOCKER_USERNAME}}
          password: ${{env.DOCKER_PASSWORD}}

      - name: Maven Clean, Install, Docker Build, Push and SonarCloud
        run: mvn -B clean install -P build-push,sonar --file pom.xml

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ env.SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Use gcloud CLI
        run: gcloud info

      # Get the GKE credentials so we can deploy to the cluster
      - name: Get the GKE credentials
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER_NAME" --zone "$GKE_ZONE"

      # Deploy Currency Service images to the GKE cluster
      - name: Deployment to the GKE Cluster
        run: |-
          kubectl apply -f deployment/currencyconversion-deployment.yaml,deployment/currencyexchange-deployment.yaml,deployment/rbac.yaml
          kubectl get services -o wide

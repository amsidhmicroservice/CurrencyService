# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: currencyservice-github-action

on:
  push:
    branches: [ helm ]
  pull_request:
    branches: [ helm ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '30 4,17 * * *'
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-helm   # TODO: update to cluster name
  GKE_ZONE: us-central1-c       # TODO: update to cluster zone
  DEPLOYMENT_NAME: currency-conversion  # TODO: update deployment name if changed in deployment.yaml
  GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8 for currencyservice
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Build currencyservice with Maven and push to docker-hub
        run: mvn -B clean install -P build-push --file pom.xml
      - name: generate sonar report of the currency-service
        run: mvn sonar:sonar

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      # Deploy Currency Service images to the GKE cluster
      - name: Deploy
        run: |-
          kubectl apply -f deployment/currencyconversion-deployment.yaml,deployment/currencyexchange-deployment.yaml
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get all -o wide

